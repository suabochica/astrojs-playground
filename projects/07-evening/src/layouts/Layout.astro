---
import "@fontsource-variable/jost";
import Noise from "@/components/Noise.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Velada Clone del evento de boxeo" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
	</head>
	<body>
		<!-- <Noise /> -->
		<div class="top-0 fixed">
			<canvas id="smoke" class="smoke"></canvas>
			<div class="overlay"></div>
		</div>
		<div id="content" class="max-w-6xl px-4 lg:px-10 pt-40 mx-auto">
			<slot />
		</div>
	</body>
</html>

<script is:inline type="module">
	import { init } from "../../src/scripts/smoke";

	let isDark = localStorage.getItem("theme") === "dark";

	init(isDark);

	const html = document.documentElement;
	const observe = new MutationObserver((mutations) => {
		mutations.forEach((mutation) => {
			isDark = localStorage.getItem("theme") === "dark";
			init(!!isDark);
		});

		observe.observe(html, {
			attributes: true,
			attributeFilter: ["class"],
		});
	});
</script>

<style is:global>
	:root {
		--color-primary: 12, 12, 12;
		--color-secondary: 221, 221, 221;
		--color-twitch: #6441A4;
		--background-color: var(--color-primary)
	}

	html {
		font-family: "Jost Variable", system-ui, sans-serif;
		background: var(--color-primary);
	}

	#content {
		position: relative;
		z-index: 2;
	}

	.dark {
		--color-primary: 221, 221, 221;
		--color-secondary: 12, 12, 12;
	}

	.smoke-canvas {
		position: relative;
		top: 0;
		bottom: 0;
		height: 100vh;
	}

	.overlay {
		position: absolute;
		background: linear-gradient(
			to bottom,
			var(--color-secondary) 100%,
			transparent 0%
		);
		background: linear-gradient(
			180deg,
			transparent 0%,
			var(--color-secondary) 100%
		);
		width: 100%;
		bottom: 0;
		height: 50%;
	}

</style>
